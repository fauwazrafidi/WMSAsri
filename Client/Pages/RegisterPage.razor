@page "/register"

@using SHARED.DTOs
@using SHARED.Contracts

@inject IJSRuntime js
@inject IUserAccount AccountService

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="User" OnValidSubmit="HandleRegistration" Enhance>
                <div class="card">
                    <div class="card-header"> Create An Account </div>
                    <div class="card-body">

                        @* Full Name *@
                        <div class="form-group mb-3">
                            <input @bind="User.UserName"
                                   class="form-control"
                                   placeholder="Fullname" />
                        </div>

                        @* Email Address *@
                        <div class="form-group mb-3">
                            <input @bind="User.Email"
                                   class="form-control"
                                   type="email"
                                   placeholder="Email" />
                        </div>

                        @* Password *@
                        <div class="form-group mb-3">
                            <div class="input-group-text mb-3">
                                <input @bind="User.Password"
                                       class="form-control"
                                       type="@(ShowPassword is true? "text" : "password")"
                                       placeholder="Password"
                                       aria-label="Password"
                                       aria-describedby="Password">

                                <span class="input-group-text cursorStyle"
                                      id="Password"
                                      @onclick="ShowPasswordEvent">@(ShowPassword is true ? "Hide" : "Show")</span>
                            </div>

                        </div>

                        @* Confirm Password *@
                        <div class="form-group mb-3">
                            <div class="input-group-text mb-3">
                                <input @bind="User.ConfirmPassword"
                                       class="form-control"
                                       type="@(ShowConfirmPassword is true? "text" : "password")"
                                       placeholder="Confirm Password"
                                       aria-label="ConfirmPassword"
                                       aria-describedby="Confirm-Password">

                                <span class="input-group-text cursorStyle"
                                      id="ConfirmPassword"
                                      @onclick="ShowConfirmPasswordEvent">@(ShowConfirmPassword is true ? "Hide" : "Show")</span>
                            </div>

                        </div>
                        <a class="text-primary cursorStyle text-center">Login Instead</a>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary float-end" type="submit">
                            Register
                        </button>
                    </div>
                </div>
            </EditForm>

        </div>
    </div>
</div>

@code {
    public bool ShowPassword { get; set; }
    public bool ShowConfirmPassword { get; set; }

    public UserDTO User { get; set; } = new();
    private async Task HandleRegistration()
    {
        var (flag, message) = await AccountService.CreateAccount(User);
        if (flag)
        {
            await js.InvokeVoidAsync("alert", message);
            User = new();
            return;
        }

        await js.InvokeVoidAsync("alert", message);
        return;
    }


    void ShowPasswordEvent() => ShowPassword = !ShowPassword;
    void ShowConfirmPasswordEvent() => ShowConfirmPassword = !ShowConfirmPassword;
}
